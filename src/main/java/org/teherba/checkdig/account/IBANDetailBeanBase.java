/*  IBANDetailBeanBase.java - Country specific data for checking of IBAN subfields
 *  @(#) $Id$
 *  Automatically generated by xtrans/web/xslt/genRecord.xsl at 2017-05-29T15:42:08+02:00
 *  DO NOT EDIT HERE - rather inherit from this class!
 */
package org.teherba.checkdig.account;
import  java.text.SimpleDateFormat;
import  java.sql.Date;
import  java.sql.Timestamp;
import  org.xml.sax.Attributes;
import  org.xml.sax.helpers.AttributesImpl;
import  org.xml.sax.SAXException;

/** Country specific data for checking of IBAN subfields.
 */
public class IBANDetailBeanBase {
    /** Readable format for dates */
    protected static final SimpleDateFormat ISO_DATE_FORMAT      = new SimpleDateFormat("yyyy-MM-dd");
    /** Readable format for timestamps with milliseconds */
    protected static final SimpleDateFormat ISO_TIMESTAMP_FORMAT = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

    /** Replaces offending characters in attributes by entities,
     *  and trim right trailing whitespace
     *  @param value value of the attribute
     *  @return string with offending characters replaced by entities
     */
    protected String replaceAttrText(String value) {
        return ("x" + value
                .replaceAll("&" , "&amp;")
                .replaceAll("\'", "&apos;")
                .replaceAll("\"", "&quot;")
               ).trim().substring(1);
    } // replaceAttrText

    /** Source code version */
    public static final String CVSID = "@(#) $Id$";


    /** No-args Constructor for Country specific data for checking of IBAN subfields.
     */
    public IBANDetailBeanBase() {
        super();
    } // Constructor

    /** cc - Country Code */
    protected String cc;

    /** Sets cc - Country Code
     *  @param cc Country Code
     */
    public void setCc(String cc) {
        this.cc = cc;
    } // setCc

    /** Gets cc - Country Code
     *  @return Country Code
     */
    public String getCc() {
        return cc;
    } // getCc
    //----------------
    /** width - Total Length */
    protected int width;

    /** Sets width - Total Length
     *  @param width Total Length
     */
    public void setWidth(int width) {
        this.width = width;
    } // setWidth

    /** Gets width - Total Length
     *  @return Total Length
     */
    public int getWidth() {
        return width;
    } // getWidth
    //----------------
    /** bbidStart - Start of Bank/Branch Id */
    protected int bbidStart;

    /** Sets bbidStart - Start of Bank/Branch Id
     *  @param bbidStart Start of Bank/Branch Id
     */
    public void setBbidStart(int bbidStart) {
        this.bbidStart = bbidStart;
    } // setBbidStart

    /** Gets bbidStart - Start of Bank/Branch Id
     *  @return Start of Bank/Branch Id
     */
    public int getBbidStart() {
        return bbidStart;
    } // getBbidStart
    //----------------
    /** bbidLen - Length of Bank/Branch Id */
    protected int bbidLen;

    /** Sets bbidLen - Length of Bank/Branch Id
     *  @param bbidLen Length of Bank/Branch Id
     */
    public void setBbidLen(int bbidLen) {
        this.bbidLen = bbidLen;
    } // setBbidLen

    /** Gets bbidLen - Length of Bank/Branch Id
     *  @return Length of Bank/Branch Id
     */
    public int getBbidLen() {
        return bbidLen;
    } // getBbidLen
    //----------------
    /** acctStart - Start of Account Number */
    protected int acctStart;

    /** Sets acctStart - Start of Account Number
     *  @param acctStart Start of Account Number
     */
    public void setAcctStart(int acctStart) {
        this.acctStart = acctStart;
    } // setAcctStart

    /** Gets acctStart - Start of Account Number
     *  @return Start of Account Number
     */
    public int getAcctStart() {
        return acctStart;
    } // getAcctStart
    //----------------
    /** acctLen - Length of Account Number */
    protected int acctLen;

    /** Sets acctLen - Length of Account Number
     *  @param acctLen Length of Account Number
     */
    public void setAcctLen(int acctLen) {
        this.acctLen = acctLen;
    } // setAcctLen

    /** Gets acctLen - Length of Account Number
     *  @return Length of Account Number
     */
    public int getAcctLen() {
        return acctLen;
    } // getAcctLen
    //----------------
    /** chkMethod - Number of Check Method */
    protected int chkMethod;

    /** Sets chkMethod - Number of Check Method
     *  @param chkMethod Number of Check Method
     */
    public void setChkMethod(int chkMethod) {
        this.chkMethod = chkMethod;
    } // setChkMethod

    /** Gets chkMethod - Number of Check Method
     *  @return Number of Check Method
     */
    public int getChkMethod() {
        return chkMethod;
    } // getChkMethod
    //----------------
    /** chkStart - Start of Check Digits */
    protected int chkStart;

    /** Sets chkStart - Start of Check Digits
     *  @param chkStart Start of Check Digits
     */
    public void setChkStart(int chkStart) {
        this.chkStart = chkStart;
    } // setChkStart

    /** Gets chkStart - Start of Check Digits
     *  @return Start of Check Digits
     */
    public int getChkStart() {
        return chkStart;
    } // getChkStart
    //----------------
    /** chkLen - Length of Check Digits */
    protected int chkLen;

    /** Sets chkLen - Length of Check Digits
     *  @param chkLen Length of Check Digits
     */
    public void setChkLen(int chkLen) {
        this.chkLen = chkLen;
    } // setChkLen

    /** Gets chkLen - Length of Check Digits
     *  @return Length of Check Digits
     */
    public int getChkLen() {
        return chkLen;
    } // getChkLen
    //----------------

    /** Gets an XML tag for the record
     *  @param namespace namespace for the generated XML tag with colon, or empty
     *  @return an XML element for a IBANDetail record
     */
    public String getXMLTag(String namespace) {
        return namespace + "IBANDetail";
    } // getXMLTag

    /** Assembles all attributes in an object
     *  @return attributes for an XML element representing the bean
     */
    public Attributes getAttributes() {
        String localName = "";
        AttributesImpl attrs = null;
        attrs = new AttributesImpl();
                attrs.addAttribute("", "cc", "cc"            , "CDATA", replaceAttrText(getCc()));
                attrs.addAttribute("", "width", "width"      , "CDATA", String.valueOf(getWidth()));
                attrs.addAttribute("", "bbidStart", "bbidStart", "CDATA", String.valueOf(getBbidStart()));
                attrs.addAttribute("", "bbidLen", "bbidLen"  , "CDATA", String.valueOf(getBbidLen()));
                attrs.addAttribute("", "acctStart", "acctStart", "CDATA", String.valueOf(getAcctStart()));
                attrs.addAttribute("", "acctLen", "acctLen"  , "CDATA", String.valueOf(getAcctLen()));
                attrs.addAttribute("", "chkMethod", "chkMethod", "CDATA", String.valueOf(getChkMethod()));
                attrs.addAttribute("", "chkStart", "chkStart", "CDATA", String.valueOf(getChkStart()));
                attrs.addAttribute("", "chkLen", "chkLen"    , "CDATA", String.valueOf(getChkLen()));
        return attrs;

    } // getAttributes

    /** Receive notification of the start of an element.
     *  Looks for the element which contains encoded strings.
     *  @param uri The Namespace URI, or the empty string if the element has no Namespace URI
     *  or if Namespace processing is not being performed.
     *  @param localName the local name (without prefix),
     *  or the empty string if Namespace processing is not being performed.
     *  @param qName the qualified name (with prefix),
     *  or the empty string if qualified names are not available.
     *  @param attrs the attributes attached to the element.
     *  If there are no attributes, it shall be an empty Attributes object.
     *  @throws SAXException for SAX errors
     */
    public void startElement(String uri, String localName, String qName, Attributes attrs) throws SAXException {
        try {
            if (false) {
            } else if (qName.equals("IBANDetail")) {
                setCc              (attrs.getValue("cc"));
                setWidth           (Integer.parseInt(attrs.getValue("width")));
                setBbidStart       (Integer.parseInt(attrs.getValue("bbidStart")));
                setBbidLen         (Integer.parseInt(attrs.getValue("bbidLen")));
                setAcctStart       (Integer.parseInt(attrs.getValue("acctStart")));
                setAcctLen         (Integer.parseInt(attrs.getValue("acctLen")));
                setChkMethod       (Integer.parseInt(attrs.getValue("chkMethod")));
                setChkStart        (Integer.parseInt(attrs.getValue("chkStart")));
                setChkLen          (Integer.parseInt(attrs.getValue("chkLen")));
            } else {
                // silently ignore other elements
            }
        } catch (Exception exc) {
            throw new SAXException("invalid attribute value ", exc);
        }
    } // startElement

} // class IBANDetailBeanBase
